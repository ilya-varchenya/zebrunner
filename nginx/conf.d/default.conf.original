  map $http_upgrade $connection_upgrade {
    default  upgrade;
    ''       close;
  }

server {
    listen 80;
    server_name localhost;

    #to resolve issue with uploading to sonar huge project reports or uploading apk to STF (Error 413)
    client_max_body_size 1024M;

    resolver 127.0.0.11 valid=30s;
    resolver_timeout 10s;

    #charset koi8-r;
    access_log  /var/log/nginx/default.access.log main;
    error_log   /var/log/nginx/default.error.log warn;

    location /sonarqube {
      set $upstream_sonar 127.0.0.1:80;
      proxy_set_header Host sonarqube;
      proxy_pass http://$upstream_sonar;
      proxy_http_version 1.1;
    }

    location /jenkins {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        #proxy_redirect off;
	#proxy_redirect http:// https://;
 
        if (!-f $request_filename) {
            set $upstream_jenkins jenkins-master:8080;
	    proxy_pass http://$upstream_jenkins;
            break;
        }
    }

    location /app {
      set $upstream_zebrunner zebrunner-proxy:80;
      proxy_pass http://$upstream_zebrunner;
      proxy_http_version 1.1;

      # two below headers to support websocket connection
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
    }

    location /reporting-service) {
      set $upstream_zebrunner zebrunner-proxy:80;
      proxy_pass http://$upstream_zebrunner;
      proxy_http_version 1.1;

     # two below headers to support websocket connection
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
    }

    location /elasticsearch {
      set $upstream_zebrunner zebrunner-proxy:80;
      proxy_pass http://$upstream_zebrunner;
      proxy_http_version 1.1;
    }

   #TODO: temporary workaround for API svg icon till 5.2 release where Zafira will be moved onto the root "/" context path
    location ~* /app/api.*.svg {
      set $upstream_zebrunner zebrunner-proxy:80;
      proxy_pass http://$upstream_zebrunner;
      proxy_http_version 1.1;
    }

    location ~ /(stf|auth/mock|auth/ldap|auth/contact|auth/api|static/app|static/logo|app/api|api/v1|s/upload|s/image|s/blob|s/apk) {
      set $upstream_stf stf-proxy:80;
      proxy_pass http://$upstream_stf;
      proxy_http_version 1.1;
    }

    location /d/ {
      set $upstream_stf stf-proxy:80;
      proxy_pass http://$upstream_stf;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location /socket.io {
      set $upstream_stf stf-proxy:80;
      proxy_pass http://$upstream_stf;
      proxy_http_version 1.1;

      # two below headers to support websocket connection
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
   }


    location /mcloud {
      set $upstream_zebrunner 127.0.0.1:80;
      proxy_set_header Host mcloud;
      proxy_pass http://$upstream_zebrunner;
      proxy_http_version 1.1;
    }


    # Important: do not open access to the admin panel for rabbitmq etc


    #Selenoid VNC WebSocket
    location /vnc {
      set $upstream_selenoid selenoid:4444;
      proxy_pass http://$upstream_selenoid;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header Access-Control-Allow-Origin *;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
    }

    location /video {
        root   /usr/share/nginx;
    }

# IMPORTANT!!! make sure to generate secure Selenoid credentials and put them into the INFRA_HOME/nginx/htpasswd/selenoid.htpasswd
# TODO: provide valid link onto the help howto secure this site
# internal hub providers integration
    # Selenoid Hub
    location  ~ ^/selenoid/(.*)$ {
      auth_basic "Private Selenoid Hub";
      auth_basic_user_file /usr/share/nginx/htpasswd/selenoid.htpasswd;

      set $upstream_selenoid selenoid:4444;
      proxy_pass http://$upstream_selenoid/$1;

      proxy_http_version      1.1;
      proxy_set_header        Connection "";
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout   10;
      proxy_send_timeout      300;
      proxy_read_timeout      300;
      proxy_buffers           32 64m;
      proxy_buffer_size       64k;
      proxy_next_upstream    error timeout http_502 http_503 http_504;
      client_max_body_size    64m;
      client_body_buffer_size 64m;
      add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS,POST,DELETE";
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Headers "Content-Type,Authorization";
      add_header Access-Control-Allow-Credentials "true";
    }

# external hub providers integration
    # ZEBRUNNER
    location  ~ ^/zebrunner/(.*)$ {
      auth_basic "External Zebrunner Selenium Hub";
      auth_basic_user_file /usr/share/nginx/htpasswd/zebrunner.htpasswd;

      # Replace ZEBRUNNER_TOKEN with base64 encoded string of your "user:password" credentials.
      proxy_set_header Authorization "Basic ZEBRUNNER_TOKEN";

      set $upstream_zebranner hub.zebrunner.com:4444;

      proxy_pass              https://upstream_zebranner/$1;
      proxy_http_version      1.1;
      proxy_set_header        Connection "";
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout   10;
      proxy_send_timeout      300;
      proxy_read_timeout      300;
      proxy_buffers           32 64m;
      proxy_buffer_size       64k;
      proxy_next_upstream    error timeout http_502 http_503 http_504;
      client_max_body_size    64m;
      client_body_buffer_size 64m;
      add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS,POST,DELETE";
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Headers "Content-Type,Authorization";
      add_header Access-Control-Allow-Credentials "true";
    }

    # Aerokube
    location  ~ ^/aerokube/(.*)$ {
      auth_basic "External Aerokube Selenium Hub";
      auth_basic_user_file /usr/share/nginx/htpasswd/aerokube.htpasswd;

      # Replace AEROKUBE_TOKEN with base64 encoded string of your "user:password" credentials.
      proxy_set_header Authorization "Basic AEROKUBE_TOKEN";

      set $upstream_aerokube browsers.aerokube.com:4444;
      proxy_pass              https://$upstream_aerokube/$1;
      proxy_http_version      1.1;
      proxy_set_header        Connection "";
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout   10;
      proxy_send_timeout      300;
      proxy_read_timeout      300;
      proxy_buffers           32 64m;
      proxy_buffer_size       64k;
      proxy_next_upstream    error timeout http_502 http_503 http_504;
      client_max_body_size    64m;
      client_body_buffer_size 64m;
      add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS,POST,DELETE";
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Headers "Content-Type,Authorization";
      add_header Access-Control-Allow-Credentials "true";
    }

    # BrowserStack
    location  ~ ^/browserstack/(.*)$ {
      auth_basic "External Browserstack Selenium Hub";
      auth_basic_user_file /usr/share/nginx/htpasswd/browserstack.htpasswd;

      # Replace BROWSERSTACK_TOKEN with base64 encoded string of your "user:password" credentials.
      proxy_set_header Authorization "Basic BROWSERSTACK_TOKEN";

      set $upstream_browserstack hub-cloud.browserstack.com;
      proxy_pass              http://$upstream_browserstack/$1;
      proxy_http_version      1.1;
      proxy_set_header        Connection "";
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout   10;
      proxy_send_timeout      300;
      proxy_read_timeout      300;
      proxy_buffers           32 64m;
      proxy_buffer_size       64k;
      proxy_next_upstream    error timeout http_502 http_503 http_504;
      client_max_body_size    64m;
      client_body_buffer_size 64m;
      add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS,POST,DELETE";
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Headers "Content-Type,Authorization";
      add_header Access-Control-Allow-Credentials "true";
    }

    # SauceLabs - not tested yet
    location  ~ ^/saucelabs/(.*)$ {
      auth_basic "External SauceLabs Selenium Hub";
      auth_basic_user_file /usr/share/nginx/htpasswd/saucelabs.htpasswd;

      # Replace SAUCELABS_TOKEN with base64 encoded string of your "user:password" credentials.
      proxy_set_header Authorization "Basic SAUCELABS_TOKEN";

      set $upstream_saucelabs ondemand.saucelabs.com;
      proxy_pass              http://$upstream_saucelabs/$1;
      proxy_http_version      1.1;
      proxy_set_header        Connection "";
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout   10;
      proxy_send_timeout      300;
      proxy_read_timeout      300;
      proxy_buffers           32 64m;
      proxy_buffer_size       64k;
      proxy_next_upstream    error timeout http_502 http_503 http_504;
      client_max_body_size    64m;
      client_body_buffer_size 64m;
      add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS,POST,DELETE";
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Headers "Content-Type,Authorization";
      add_header Access-Control-Allow-Credentials "true";
    }

#TODO: register lamdatest location url

    location /grid {
        root   /usr/share/nginx/html;
    }

    location / {
      set $upstream_zebrunner zebrunner-proxy:80;
      proxy_pass http://$upstream_zebrunner;
      proxy_http_version 1.1;

      # two below headers to support websocket connection
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

